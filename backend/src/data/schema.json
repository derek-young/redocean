"generator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nenum Role {\n  ADMIN\n  AUDITOR\n}\n\nenum Status {\n  ACTIVE\n  ARCHIVED\n}\n\nmodel User {\n  id        String   @id @default(cuid(2))\n  email     String   @unique\n  role      Role\n  firstName String?\n  lastName  String?\n  status    Status @default(ACTIVE)\n  createdAt DateTime @default(now())\n  deletedAt DateTime?\n  updatedAt DateTime @updatedAt\n\n  // Relationships\n  journalEntries JournalEntry[]\n  userTenantMemberships UserTenantMembership[]\n\n  @@map(\"users\")\n}\n\nmodel Tenant {\n  id        String   @id @default(cuid(2))\n  name      String\n  subdomain String   @unique\n  status    Status @default(ACTIVE)\n  createdAt DateTime @default(now())\n  deletedAt DateTime?\n  updatedAt DateTime @updatedAt\n\n  // Relationships\n  accounts  Account[]\n  customers Customer[]\n  journalEntries JournalEntry[]\n  userTenantMemberships UserTenantMembership[]\n  vendors   Vendor[]\n\n  @@map(\"tenants\")\n}\n\nmodel UserTenantMembership {\n  id        String   @id @default(cuid(2))\n  userId    String\n  tenantId  String\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relationships\n  user     User   @relation(fields: [userId], references: [id])\n  tenant   Tenant @relation(fields: [tenantId], references: [id])\n\n  @@unique([userId, tenantId])\n  @@map(\"user_tenant_memberships\")\n}\n\n// ===========================================\n// CUSTOMER & VENDOR MANAGEMENT\n// ===========================================\n\nmodel Customer {\n  id        String   @id @default(cuid(2))\n  name      String\n  tenantId  String\n  status    Status @default(ACTIVE)\n  createdAt DateTime @default(now())\n  deletedAt DateTime?\n  updatedAt DateTime @updatedAt\n\n  // Relationships\n  tenant    Tenant @relation(fields: [tenantId], references: [id], onDelete: Cascade)\n  contacts  Contact[]\n  addresses Address[]\n\n  @@map(\"customers\")\n}\n\nmodel Vendor {\n  id        String   @id @default(cuid(2))\n  name      String\n  tenantId  String\n  status    Status @default(ACTIVE)\n  createdAt DateTime @default(now())\n  deletedAt DateTime?\n  updatedAt DateTime @updatedAt\n\n  // Relationships\n  tenant    Tenant @relation(fields: [tenantId], references: [id], onDelete: Cascade)\n  contacts  Contact[]\n  addresses Address[]\n\n  @@map(\"vendors\")\n}\n\nmodel Address {\n  id        String   @id @default(cuid(2))\n  street1   String\n  street2   String?\n  street3   String?\n  city      String\n  state     String\n  zip       String\n  country   String   @default(\"US\")\n  isPrimary Boolean  @default(false)\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relationships\n  customerId String?\n  customer   Customer? @relation(fields: [customerId], references: [id], onDelete: Cascade)\n\n  vendorId String?\n  vendor   Vendor? @relation(fields: [vendorId], references: [id], onDelete: Cascade)\n\n  @@map(\"addresses\")\n}\n\nenum ContactType {\n  PRIMARY\n  SECONDARY\n}\n\nmodel Contact {\n  id         String   @id @default(cuid(2))\n  email      String   @unique\n  firstName  String?\n  lastName   String?\n  phone      String?\n  status     Status @default(ACTIVE)\n  type       ContactType @default(PRIMARY)\n  createdAt  DateTime @default(now())\n  deletedAt  DateTime?\n  updatedAt  DateTime @updatedAt\n\n  // Relationships\n  customerId String?\n  customer   Customer? @relation(fields: [customerId], references: [id], onDelete: Cascade)\n\n  vendorId   String?\n  vendor     Vendor? @relation(fields: [vendorId], references: [id], onDelete: Cascade)\n\n  @@map(\"contacts\")\n}\n\n// ===========================================\n// ACCOUNTING & FINANCIAL MANAGEMENT\n// ===========================================\n\nenum AccountType {\n  ASSET       // 1000-1999: Cash, Accounts Receivable, Inventory, etc.\n  LIABILITY   // 2000-2999: Accounts Payable, Loans, etc.\n  EQUITY      // 3000-3999: Owner's Equity, Retained Earnings, etc.\n  REVENUE     // 4000-4999: Sales, Service Revenue, etc.\n  EXPENSE     // 5000-5999: Cost of Goods Sold, Operating Expenses, etc.\n}\n\nmodel Account {\n  id          String   @id @default(cuid(2))\n  code        String   // e.g., \"1000\", \"1100\", \"2000\"\n  name        String   // e.g., \"Cash\", \"Accounts Receivable\", \"Accounts Payable\"\n  type        AccountType\n  description String?\n  status      Status @default(ACTIVE)\n  tenantId    String\n  createdAt   DateTime @default(now())\n  deletedAt   DateTime?\n  updatedAt   DateTime @updatedAt\n\n  // Hierarchical structure\n  parentId    String?\n  parent      Account? @relation(\"AccountHierarchy\", fields: [parentId], references: [id], onDelete: SetNull)\n  children    Account[] @relation(\"AccountHierarchy\")\n\n  // Relationships\n  tenant      Tenant @relation(fields: [tenantId], references: [id], onDelete: Cascade)\n  transactions Transaction[]\n\n  @@unique([code, tenantId])\n  @@map(\"accounts\")\n}\n\nmodel JournalEntry {\n  id          String   @id @default(cuid(2))\n  entryNumber Int      // Reader-friendly ID: 1001, 1002, etc.\n  date        DateTime\n  reference   String?\n  memo        String?\n  tenantId    String\n  userId      String\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  // Relationships\n  user        User @relation(fields: [userId], references: [id])\n  tenant      Tenant @relation(fields: [tenantId], references: [id], onDelete: Cascade)\n  transactions Transaction[]\n\n  @@unique([entryNumber, tenantId])\n  @@map(\"journal_entries\")\n}\n\nenum TransactionType {\n  DEBIT\n  CREDIT\n}\n\nmodel Transaction {\n  id            String   @id @default(cuid(2))\n  description   String?\n  amount        Decimal? @db.Decimal(10, 2)\n  currency      String   @default(\"USD\")\n  type          TransactionType\n  accountId     String\n  journalEntryId String\n  createdAt     DateTime @default(now())\n  updatedAt     DateTime @updatedAt\n\n  // Relationships\n  account       Account @relation(fields: [accountId], references: [id])\n  journalEntry  JournalEntry @relation(fields: [journalEntryId], references: [id])\n\n  @@map(\"transactions\")\n}\n"
